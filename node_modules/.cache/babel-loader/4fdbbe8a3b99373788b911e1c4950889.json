{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niwan\\\\OneDrive\\\\Desktop\\\\My_Projects\\\\todolist-with-react\\\\src\\\\components\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n\n  const addTask = e => {\n    if (e.target.parentElement.firstElementChild.value === \"\") {\n      alert(\"Please enter the NOTE\");\n    } else {\n      setList([...list, {\n        id: Date.now(),\n        note: newNote,\n        complated: false\n      }]);\n      setNewNote(\"\");\n    }\n  };\n\n  const markComplated = id => {\n    setList(list.map(e => e.id === id ? { ...e,\n      complated: !e.complated\n    } : e));\n  };\n\n  const clearComplated = () => {\n    if (list[0].note === \"\") {\n      alert(\"hepsi silindi\");\n    } else {\n      setList(list.filter(item => !item.complated));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"input\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"input-text-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          autoFocus: true,\n          type: \"text\",\n          name: \"text\",\n          id: \"input-text\",\n          placeholder: \"Add Your Todo's Hear\",\n          required: true,\n          onChange: e => setNewNote(e.target.value),\n          value: newNote,\n          ref: input => input && input.focus(),\n          onKeyDown: e => e.key === \"Enter\" && addTask(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"add\",\n          className: \"add\",\n          onClick: addTask,\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"list-container\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notes\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"deleteAll\",\n            className: \"deleteAll\",\n            onClick: clearComplated,\n            children: [\"clear\", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-trash-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"list\",\n            children: list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => markComplated(item.id),\n              className: item.complated ? \"fixed\" : \"\",\n              children: item.note\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"b11RG6Ky//yw15nMWx8hDoViSaM=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/niwan/OneDrive/Desktop/My_Projects/todolist-with-react/src/components/Main.jsx"],"names":["React","useState","Main","list","setList","newNote","setNewNote","addTask","e","target","parentElement","firstElementChild","value","alert","id","Date","now","note","complated","markComplated","map","clearComplated","filter","item","input","focus","key"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction Main() {\r\n  const [list, setList] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n\r\n  const addTask = (e) => {\r\n    \r\n    if (e.target.parentElement.firstElementChild.value === \"\") {\r\n      alert(\"Please enter the NOTE\");\r\n    } else {\r\n      setList([...list, { id: Date.now(), note: newNote, complated: false }]);\r\n      setNewNote(\"\");\r\n    }\r\n  };\r\n\r\n  const markComplated = (id) => {\r\n    setList(\r\n      list.map((e) => (e.id === id ? { ...e, complated: !e.complated } : e))\r\n    );\r\n  };\r\n\r\n  const clearComplated = () => {\r\n    if (list[0].note === \"\") {\r\n      alert(\"hepsi silindi\");\r\n    } else {\r\n      setList(list.filter((item) => !item.complated));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <section className=\"input\">\r\n        <nav className=\"input-text-box\">\r\n          <input\r\n            autoFocus\r\n            type=\"text\"\r\n            name=\"text\"\r\n            id=\"input-text\"\r\n            placeholder=\"Add Your Todo's Hear\"\r\n            required\r\n            onChange={(e) => setNewNote(e.target.value)}\r\n            value={newNote}\r\n            ref={(input) => input && input.focus()}\r\n            onKeyDown={(e) => e.key === \"Enter\" && addTask(e)}\r\n          />\r\n          <button id=\"add\" className=\"add\" onClick={addTask} type=\"submit\">\r\n            Add\r\n          </button>\r\n        </nav>\r\n      </section>\r\n\r\n      <section className=\"list-container\">\r\n        <nav className=\"card\">\r\n          <nav className=\"card-header\">\r\n            <span className=\"notes\">Todos</span> \r\n            <button\r\n              id=\"deleteAll\"\r\n              className=\"deleteAll\"\r\n              onClick={clearComplated}\r\n            >\r\n              clear<i className=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n          </nav>\r\n          <nav className=\"card-body\">\r\n            <ul id=\"list\">\r\n              {list.map((item) => (\r\n                <li\r\n                  key={item.id}\r\n                  onClick={() => markComplated(item.id)}\r\n                  className={item.complated ? \"fixed\" : \"\"}\r\n                >\r\n                  {item.note}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        </nav>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}